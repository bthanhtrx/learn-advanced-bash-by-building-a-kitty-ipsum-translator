builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello bash
echo hello > stdout.txt
ls --color=auto
echo hello > stdout.txt
echo hello bash > stdout.txt
echo hello bash >> stdout.txt
cat stdout.txt
echo hello bash > stdout.txt
cat stdout.txt
> stdout.txt
cat stdout.txt
bad_command
bad_command > stderr.txt
cat stderr.txt
bad_command 2> stderr.txt
ls --color=auto
echo bash > stdout.txt
cat stdout.txt
oeuou > stdout.txt
cat stdout.txt
oeuou 2> stdout.txt
cat stdout.txt
echo hello bash > stdout.txt
cat stdout.txt
read NAME
cat $NAME
echo $NAME
cat $NAME
cat $NAME
read NAME
read NAME
echo $NAME
echo $NAME > stdout.txt
echo freeCodeCamp > name.txt
name.txt < read
name.txt NAME < read
read NAME < name.txt
cat name.txt
echo $NAME
echo $NAME
__vsc_prompt_cmd_original
echo $NAME
__vsc_prompt_cmd_original
echo $NAME
echo nero
echo $NAME
echo $NAME
echo nero
echo $NAME
cat
cat name.txt
cat name.txt NAME > read
__vsc_prompt_cmd_original
read NAME name.txt < cat
read NAME
echo $NAME
read NAME < name.txt
read NAME > name.txt
echo $NAME
cat name.txt
cat < name.txt
echo name > name.txt
cat < name.txt
echo $NAME
echo $NAME
echo $NAME
echo $NAME
echo NAME
touch script.sh
chmod +x script.sh
nano script.sh
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
./script.sh
./script.sh
./script.sh
./script.sh
./script.sh
./script.sh
./script.sh
./script.sh
./script.sh
echo nero
echo nero
echo nero
echo nero 2> stderr.txt
echo nero
echo nero
echo nero
ls --color=auto
cat stdout.txt
cat stderr.txt
__vsc_prompt_cmd_original
name.txt
name.txt
__vsc_prompt_cmd_original
ls --color=auto
cat name.txt
cat name.txt < ./script.sh 2> stderr.txt > stdout.txt
cat stdout.txt
cat name.txt
nero > name.txt
echo nero > name.txt
cat name.txt < ./script.sh 2> stderr.txt > stdout.txt
cat stdout.txt
cat name.txt < ./script.sh
cat name.txt < ./script.sh
echo freeCodeCamp > name.txt
cat name.txt < ./script.sh
./script.sh < name.txt
./script.sh < name.txt 2> stderr.txt
./script.sh heloo < echo
./script.sh < heloo
./script.sh < read
./script.sh NAMEO < read
./script.sh
./script.sh < name.txt 2> stderr.txt > stdout.txt
cat kitty_ipsum
cat kitty_ipsum
ls --color=auto
ls --color=auto /
ls --color=auto /workspace/
ls --color=auto /workspace/project/
ls --color=auto
ls --color=auto -la
cat kitty_ipsum_1.txt
cat kitty_ipsum_2.txt
wc kitty_ipsum_1
wc kitty_ipsum_1.txt
man wc
man wc
man wc -l
wc kitty_ipsum_1.txt -l
wc kitty_ipsum_1.txt -w
wc kitty_ipsum_1.txt -b
man wc -l
man wc -c
wc kitty_ipsum_1.txt -c
man wc -c
man wc -m
wc kitty_ipsum_1.txt -m
wc kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
wc < kitty_ipsum_1.txt
echo ~~ kitty_ipsum_1.txt info ~~ > kitty_info.txt
echo "~~ kitty_ipsum_1.txt info ~~" > kitty_info.txt
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
ls --color=auto
wc name.txt
wc kitty_ipsum_1.txt
wc < kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
man wc
wc hello
wc hello < echo
wc < hello
echo -e "\nNumber of lines:" >> kitty_info.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
cat kitty_ipsum_1.txt
echo -e "\nNumber of words:" >> kitty_info.txt
cat kitty_ipsum_1.txt
wc kitty_ipsum_1.txt -m
__vsc_prompt_cmd_original
echo -e "\nNumber of characters:" >> kitty_info.txt
cat kitty_ipsum_1.txt
man wc
wc -m kitty_ipsum_1.txt < cat >> kitty_info.txt
wc -m < kitty_ipsum_1.txt >> kitty_info.txt
grep meow kitty_ipsum_1
grep meow kitty_ipsum_1.txt
man grep
man grep
grep meow --color kitty_ipsum_1.txt
man grep
grep meow --color -n kitty_ipsum_1.txt
grep meow[a-z]* kitty_ipsum_1.txt
grep meow[a-z]* --color -n kitty_ipsum_1.txt
echo -e "\nNumber of times meow or meowzer appears:" >> kitty_info.txt
echo -e "\nNumber of times meow or meowzer appears:" >> kitty_info.txt
grep meow[a-z]* --color kitty_ipsum_1.txt
grep meow[a-z]* --color -c kitty_ipsum_1.txt
grep meow[a-z]* -c kitty_ipsum_1.txt
man grep
grep meow[a-z]* -o kitty_ipsum_1.txt
man grep
grep meow[a-z]* -c -o kitty_ipsum_1.txt
grep meow[a-z]* -o kitty_ipsum_1.txt
grep meow[a-z]* -o kitty_ipsum_1.txt
echo -e "\nLines thathey appear on:" >> kitty_info.txt
echo -e "\nLines that they appear on:" >> kitty_info.txt
grep meow[a-z]* -n kitty_ipsum_1.txt
man grep
grep meow[a-z]* -C kitty_ipsum_1.txt
man grep
cat name.txt
sed 's/r/2' name.txt
sed s/r/2 name.txt
sed s/r/2/ name.txt
sed 's/r/2/' name.txt
sed s/free/f233/ name.txt
sed s/freecodecamp/f2330d3C@mp
sed s/freecodecamp/f2330d3C@mp/ name.txt
sed s/freeCodeCamp/f2330d3C@mp/ name.txt
sed s/freeCodeCamp/f233C0d3C@mp/ name.txt
sed s/freecodecamp/f233C0d3C@mp/ name.txt
sed s/freeCodeCamp/f233C0d3C@mp/i name.txt
sed s/freecodecamp/f233C0d3C@mp/i name.txt
echo s/freeCodeCamp/f233C0d3C@mp/i name.txt < sed
wc s/freeCodeCamp/f233C0d3C@mp/i name.txt < sed
wc s/freeCodeCamp/f233C0d3C@mp/i name.txt < sed
sed s/freeCodeCamp/f233C0d3C@mp/i < name.txt
sed s/freecodecamp/f233C0d3C@mp/i < name.txt
cat name.txt
grep meow[a-z]* -n kitty_ipsum_1.txt
grep meow[a-z]* -n kitty_ipsum_1.txt
grep meow[a-z]* -n kitty_ipsum_1.txt
man sed
man sed
grep meow[a-z]* -n kitty_ipsum_1.txt
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
grep meow[a-z]* -n kitty_ipsum_1.txt
__vsc_prompt_cmd_original
grep meow[a-z]* -n kitty_ipsum_1.txt
grep meow[a-z]* -n kitty_ipsum_1.txt
grep meow[a-z]* -n kitty_ipsum_1.txt
grep meow[a-z]* -n kitty_ipsum_1.txt
__vsc_prompt_cmd_original
grep meow[a-z]* -n kitty_ipsum_1.txt
grep meow[a-z]* -n kitty_ipsum_1.txt
__vsc_prompt_cmd_original
grep meow[a-z]* -n kitty_ipsum_1.txt
grep meow[a-z]* -n kitty_ipsum_1.txt
man sed
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
grep cat* --color kitty_ipsum_1.txt
grep cat* --color kitty_ipsum_1.txt
grep cat[a-z]* --color kitty_ipsum_1.txt
grep cat[a-z]* --color kitty_ipsum_1.txt
echo -e "\nNumber of times cat, cats, or catnip appears:" >> kitty_info.txt
man grep
grep -n cat[a-z]* kitty_ipsum_1.txt
grep -c cat[a-z]* kitty_ipsum_1.txt
grep -n --color cat[a-z]* kitty_ipsum_1.txt
grep -o --color cat[a-z]* kitty_ipsum_1.txt
grep -o cat[a-z]* kitty_ipsum_1.txt
man grep
man grep
__vsc_prompt_cmd_original
grep -o cat[a-z]* kitty_ipsum_1.txt
grep -o cat[a-z]* kitty_ipsum_1.txt
grep -o cat[a-z]* kitty_ipsum_1.txt
echo -e "\nLines that they appear on:"
echo -e "\nLines that they appear on:" >> kitty_info.txt
grep -n cat[a-z]* kitty_ipsum_1.txt
grep -c cat[a-z]* kitty_ipsum_1.txt
grep -n cat[a-z]* kitty_ipsum_1.txt
grep -n cat[a-z]* kitty_ipsum_1.txt
__vsc_prompt_cmd_original
echo -e "\n~~ kitty_ipsum_2.txt info ~~"
echo -e "\n~~ kitty_ipsum_2.txt info ~~" >> kitty_info.txt
echo -e "\n\n~~ kitty_ipsum_2.txt info ~~" >> kitty_info.txt
echo -e "\nNumber of lines:"
echo -e "\nNumber of lines:" >> kitty_info.txt
cat kitty_ipsum_2.txt
cat kitty_ipsum_2.txt
echo -e "\nNumber of words:" >> kitty_info.txt
wc -w < kitty_ipsum_2.txt >> kitty_info.txt
echo -e "\nNumber of characters:" >> kitty_info.txt
cat kitty_ipsum_2.txt
cat kitty_ipsum_2.txt
man wc
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
grep meow kitty_ipsum_2.txt
grep meow --color kitty_ipsum_2.txt
grep meow -n --color kitty_ipsum_2.txt
grep meow -c --color kitty_ipsum_2.txt
grep meow[a-z]* --color kitty_ipsum_2.txt
__vsc_prompt_cmd_original
echo -e "\nNumber of times meow or meowzer appears:" >> kitty_info.txt
wc meow[a-z]* kitty_ipsum_2.txt < grep
grep meow[a-z]* kitty_ipsum_2.txt
grep meow[a-z]* kitty_ipsum_2.txt
grep meow[a-z]* -o kitty_ipsum_2.txt
grep meow[a-z]* -o kitty_ipsum_2.txt
echo -e "\nLines that they appear on:" >> kitty_info.txt
grep meow[a-z]* -n kitty_ipsum_2.txt
grep meow[a-z]* -n kitty_ipsum_2.txt
grep meow[a-z]* -n kitty_ipsum_2.txt
grep meow[a-z]* -n kitty_ipsum_2.txt
grep cat[a-z]* kitty_ipsum_2
grep cat[a-z]* kitty_ipsum_2.txt
grep cat[a-z]* --color kitty_ipsum_2.txt
__vsc_prompt_cmd_original
echo -e "\nNumber of times cat, cats, or catnip appears:" >> kitty_info.txt
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
grep cat[a-z]* -o
grep cat[a-z]* -o kitty_ipsum_2
grep cat[a-z]* -o kitty_ipsum_2.txt
grep cat[a-z]* -o kitty_ipsum_2.txt
echo -e "\nLines that they appear on:" >> kitty_info.txt
grep cat[a-z]* -n kitty_ipsum_2.txt
grep cat[a-z]* -n kitty_ipsum_2.txt
touch translate.sh
chmod translate.sh
chmod +x translate.sh
nano translate.sh
__vsc_prompt_cmd_original
nano translate.sh
__vsc_prompt_cmd_original
./translate.sh kitty_ipsum_1.txt
./translate.sh < kitty_ipsum_1.txt
